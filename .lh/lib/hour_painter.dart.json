{
    "sourceFile": "lib/hour_painter.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1643111608597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643111685658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'dart:math';\r\n \r\n import 'package:flutter/material.dart';\r\n \r\n-class ClockPainter extends CustomPainter {\r\n+class HourPainter extends CustomPainter {\r\n   @override\r\n   void paint(Canvas canvas, Size size) {\r\n     const double BASE_SIZE = 320.0;\r\n     bool showAllNumbers = true;\r\n"
                },
                {
                    "date": 1643111730239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,124 +1,124 @@\n-// ignore_for_file: prefer_const_constructors\r\n+// // ignore_for_file: prefer_const_constructors\r\n \r\n-import 'dart:math';\r\n+// import 'dart:math';\r\n \r\n-import 'package:flutter/material.dart';\r\n+// import 'package:flutter/material.dart';\r\n \r\n-class HourPainter extends CustomPainter {\r\n-  @override\r\n-  void paint(Canvas canvas, Size size) {\r\n-    const double BASE_SIZE = 320.0;\r\n-    bool showAllNumbers = true;\r\n-    double scaleFactor = size.shortestSide / BASE_SIZE;\r\n-    double centerX = size.width / 2;\r\n-    double centerY = size.height / 2;\r\n-    double radius = min(centerX, centerY);\r\n-    Offset center = Offset(centerX, centerY);\r\n-    double outerRadius = radius - 20;\r\n-    double innerRdaius = radius - 30;\r\n-    DateTime dateTime = DateTime.now();\r\n-    _drawIndicators(canvas, size, scaleFactor, showAllNumbers);\r\n+// class HourPainter extends CustomPainter {\r\n+//   @override\r\n+//   void paint(Canvas canvas, Size size) {\r\n+//     const double BASE_SIZE = 320.0;\r\n+//     bool showAllNumbers = true;\r\n+//     double scaleFactor = size.shortestSide / BASE_SIZE;\r\n+//     double centerX = size.width / 2;\r\n+//     double centerY = size.height / 2;\r\n+//     double radius = min(centerX, centerY);\r\n+//     Offset center = Offset(centerX, centerY);\r\n+//     double outerRadius = radius - 20;\r\n+//     double innerRdaius = radius - 30;\r\n+//     DateTime dateTime = DateTime.now();\r\n+//     _drawIndicators(canvas, size, scaleFactor, showAllNumbers);\r\n \r\n-    //dashLine for second\r\n-    Paint secDashPaint = Paint()\r\n-      ..color = Colors.white\r\n-      ..strokeWidth = 3\r\n-      ..strokeCap = StrokeCap.round;\r\n+//     //dashLine for second\r\n+//     Paint secDashPaint = Paint()\r\n+//       ..color = Colors.white\r\n+//       ..strokeWidth = 3\r\n+//       ..strokeCap = StrokeCap.round;\r\n \r\n-    for (int i = 0; i < 360; i += 6) {\r\n-      double x1 = centerX - outerRadius * .95 * cos(i * pi / 180);\r\n-      double y1 = centerX - outerRadius * .95 * sin(i * pi / 180);\r\n+//     for (int i = 0; i < 360; i += 6) {\r\n+//       double x1 = centerX - outerRadius * .95 * cos(i * pi / 180);\r\n+//       double y1 = centerX - outerRadius * .95 * sin(i * pi / 180);\r\n \r\n-      double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n-      double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n+//       double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n+//       double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n \r\n-      canvas.drawLine(Offset(x1, y1), Offset(x2, y2), secDashPaint);\r\n-    }\r\n-    //dashLine for hour\r\n-    Paint hourDashPaint = Paint()\r\n-      ..color = Color(0xFF222E63)\r\n-      ..strokeWidth = 4\r\n-      ..strokeCap = StrokeCap.round;\r\n+//       canvas.drawLine(Offset(x1, y1), Offset(x2, y2), secDashPaint);\r\n+//     }\r\n+//     //dashLine for hour\r\n+//     Paint hourDashPaint = Paint()\r\n+//       ..color = Color(0xFF222E63)\r\n+//       ..strokeWidth = 4\r\n+//       ..strokeCap = StrokeCap.round;\r\n \r\n-    for (int i = 0; i < 360; i += 30) {\r\n-      double x1 = centerX - outerRadius * cos(i * pi / 180);\r\n-      double y1 = centerX - outerRadius * sin(i * pi / 180);\r\n+//     for (int i = 0; i < 360; i += 30) {\r\n+//       double x1 = centerX - outerRadius * cos(i * pi / 180);\r\n+//       double y1 = centerX - outerRadius * sin(i * pi / 180);\r\n \r\n-      double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n-      double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n+//       double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n+//       double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n \r\n-      canvas.drawLine(Offset(x1, y1), Offset(x2, y2), hourDashPaint);\r\n-    }\r\n-//second hand paint\r\n-    var secHandBrush = Paint()\r\n-      ..color = Color(0xFFE81466)\r\n-      ..strokeWidth = 3\r\n-      ..strokeCap = StrokeCap.round\r\n-      ..style = PaintingStyle.stroke;\r\n-    //60 sec-360,1 sec =6 degree\r\n-    var secHandX = centerX + 80 * cos(dateTime.second * 6 * pi / 180);\r\n-    var secHandY = centerX + 80 * sin(dateTime.second * 6 * pi / 180);\r\n+//       canvas.drawLine(Offset(x1, y1), Offset(x2, y2), hourDashPaint);\r\n+//     }\r\n+// //second hand paint\r\n+//     var secHandBrush = Paint()\r\n+//       ..color = Color(0xFFE81466)\r\n+//       ..strokeWidth = 3\r\n+//       ..strokeCap = StrokeCap.round\r\n+//       ..style = PaintingStyle.stroke;\r\n+//     //60 sec-360,1 sec =6 degree\r\n+//     var secHandX = centerX + 80 * cos(dateTime.second * 6 * pi / 180);\r\n+//     var secHandY = centerX + 80 * sin(dateTime.second * 6 * pi / 180);\r\n \r\n-    canvas.drawLine(center, Offset(secHandX, secHandY), secHandBrush);\r\n+//     canvas.drawLine(center, Offset(secHandX, secHandY), secHandBrush);\r\n \r\n-//minute hand paint\r\n-    var minHandBrush = Paint()\r\n-      ..color = Color(0xFFBEC5D5)\r\n-      ..strokeWidth = 4\r\n-      ..strokeCap = StrokeCap.round\r\n-      ..style = PaintingStyle.stroke;\r\n-    var minHandX = centerX + 80 * cos(dateTime.minute * 6 * pi / 180);\r\n-    var minHandY = centerX + 80 * sin(dateTime.minute * 6 * pi / 180);\r\n-    canvas.drawLine(center, Offset(minHandX, minHandY), minHandBrush);\r\n+// //minute hand paint\r\n+//     var minHandBrush = Paint()\r\n+//       ..color = Color(0xFFBEC5D5)\r\n+//       ..strokeWidth = 4\r\n+//       ..strokeCap = StrokeCap.round\r\n+//       ..style = PaintingStyle.stroke;\r\n+//     var minHandX = centerX + 80 * cos(dateTime.minute * 6 * pi / 180);\r\n+//     var minHandY = centerX + 80 * sin(dateTime.minute * 6 * pi / 180);\r\n+//     canvas.drawLine(center, Offset(minHandX, minHandY), minHandBrush);\r\n \r\n-//hour hand\r\n-    var hourHandBrush = Paint()\r\n-      ..color = Color(0xFF222E63)\r\n-      ..strokeWidth = 6\r\n-      ..strokeCap = StrokeCap.round\r\n-      ..style = PaintingStyle.stroke;\r\n-    var hourHandX = centerX +\r\n-        60 * cos((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n-    var hourHandY = centerX +\r\n-        60 * sin((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n-    canvas.drawLine(center, Offset(hourHandX, hourHandY), hourHandBrush);\r\n+// //hour hand\r\n+//     var hourHandBrush = Paint()\r\n+//       ..color = Color(0xFF222E63)\r\n+//       ..strokeWidth = 6\r\n+//       ..strokeCap = StrokeCap.round\r\n+//       ..style = PaintingStyle.stroke;\r\n+//     var hourHandX = centerX +\r\n+//         60 * cos((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n+//     var hourHandY = centerX +\r\n+//         60 * sin((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n+//     canvas.drawLine(center, Offset(hourHandX, hourHandY), hourHandBrush);\r\n \r\n-    Paint centerCirclePaint = Paint()..color = Color(0xFFE81466);\r\n+//     Paint centerCirclePaint = Paint()..color = Color(0xFFE81466);\r\n \r\n-    canvas.drawCircle(center, 6, centerCirclePaint);\r\n-  }\r\n+//     canvas.drawCircle(center, 6, centerCirclePaint);\r\n+//   }\r\n \r\n-  @override\r\n-  bool shouldRepaint(covariant CustomPainter oldDelegate) {\r\n-    return true;\r\n-  }\r\n-}\r\n+//   @override\r\n+//   bool shouldRepaint(covariant CustomPainter oldDelegate) {\r\n+//     return true;\r\n+//   }\r\n+// }\r\n \r\n-void _drawIndicators(\r\n-    Canvas canvas, Size size, double scaleFactor, bool showAllNumbers) {\r\n-  TextStyle style = TextStyle(\r\n-      color: Colors.black,\r\n-      fontWeight: FontWeight.bold,\r\n-      fontSize: 16.0 * scaleFactor * 1.0);\r\n-  double p = 8.0;\r\n-  // p += 24.0;\r\n+// void _drawIndicators(\r\n+//     Canvas canvas, Size size, double scaleFactor, bool showAllNumbers) {\r\n+//   TextStyle style = TextStyle(\r\n+//       color: Colors.black,\r\n+//       fontWeight: FontWeight.bold,\r\n+//       fontSize: 16.0 * scaleFactor * 1.0);\r\n+//   double p = 8.0;\r\n+//   // p += 24.0;\r\n \r\n-  double r = size.shortestSide / 2;\r\n-  double longHandLength = r - (p * scaleFactor);\r\n+//   double r = size.shortestSide / 2;\r\n+//   double longHandLength = r - (p * scaleFactor);\r\n \r\n-  for (var h = 1; h <= 12; h++) {\r\n-    // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6); //+ pi / 2;\r\n-    Offset offset =\r\n-        Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n-    TextSpan span = TextSpan(style: style, text: h.toString());\r\n-    TextPainter tp = TextPainter(\r\n-      text: span,\r\n-      // textAlign: TextAlign.center,\r\n-      textDirection: TextDirection.rtl,\r\n-    );\r\n-    tp.layout();\r\n+//   for (var h = 1; h <= 12; h++) {\r\n+//     // if (!showAllNumbers && h % 3 != 80) continue;\r\n+//     double angle = (h * pi / 6); //+ pi / 2;\r\n+//     Offset offset =\r\n+//         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n+//     TextSpan span = TextSpan(style: style, text: h.toString());\r\n+//     TextPainter tp = TextPainter(\r\n+//       text: span,\r\n+//       // textAlign: TextAlign.center,\r\n+//       textDirection: TextDirection.rtl,\r\n+//     );\r\n+//     tp.layout();\r\n \r\n-    tp.paint(canvas, size.center(offset - tp.size.center(Offset.zero)));\r\n-  }\r\n-}\r\n+//     tp.paint(canvas, size.center(offset - tp.size.center(Offset.zero)));\r\n+//   }\r\n+// }\r\n"
                },
                {
                    "date": 1643111838036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,124 +1,50 @@\n-// // ignore_for_file: prefer_const_constructors\r\n+// ignore_for_file: prefer_const_constructors\r\n \r\n-// import 'dart:math';\r\n+import 'dart:math';\r\n \r\n-// import 'package:flutter/material.dart';\r\n+import 'package:flutter/material.dart';\r\n \r\n-// class HourPainter extends CustomPainter {\r\n-//   @override\r\n-//   void paint(Canvas canvas, Size size) {\r\n-//     const double BASE_SIZE = 320.0;\r\n-//     bool showAllNumbers = true;\r\n-//     double scaleFactor = size.shortestSide / BASE_SIZE;\r\n-//     double centerX = size.width / 2;\r\n-//     double centerY = size.height / 2;\r\n-//     double radius = min(centerX, centerY);\r\n-//     Offset center = Offset(centerX, centerY);\r\n-//     double outerRadius = radius - 20;\r\n-//     double innerRdaius = radius - 30;\r\n-//     DateTime dateTime = DateTime.now();\r\n-//     _drawIndicators(canvas, size, scaleFactor, showAllNumbers);\r\n+class HourPainter extends CustomPainter {\r\n+  @override\r\n+  void paint(Canvas canvas, Size size) {\r\n+    const double BASE_SIZE = 320.0;\r\n+    bool showAllNumbers = true;\r\n+    double scaleFactor = size.shortestSide / BASE_SIZE;\r\n \r\n-//     //dashLine for second\r\n-//     Paint secDashPaint = Paint()\r\n-//       ..color = Colors.white\r\n-//       ..strokeWidth = 3\r\n-//       ..strokeCap = StrokeCap.round;\r\n+    _drawIndicators(canvas, size, scaleFactor, showAllNumbers);\r\n+  }\r\n \r\n-//     for (int i = 0; i < 360; i += 6) {\r\n-//       double x1 = centerX - outerRadius * .95 * cos(i * pi / 180);\r\n-//       double y1 = centerX - outerRadius * .95 * sin(i * pi / 180);\r\n+  @override\r\n+  bool shouldRepaint(covariant CustomPainter oldDelegate) {\r\n+    return true;\r\n+  }\r\n+}\r\n \r\n-//       double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n-//       double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n+void _drawIndicators(\r\n+    Canvas canvas, Size size, double scaleFactor, bool showAllNumbers) {\r\n+  TextStyle style = TextStyle(\r\n+      color: Colors.black,\r\n+      fontWeight: FontWeight.bold,\r\n+      fontSize: 16.0 * scaleFactor * 1.0);\r\n+  double p = 8.0;\r\n+  // p += 24.0;\r\n \r\n-//       canvas.drawLine(Offset(x1, y1), Offset(x2, y2), secDashPaint);\r\n-//     }\r\n-//     //dashLine for hour\r\n-//     Paint hourDashPaint = Paint()\r\n-//       ..color = Color(0xFF222E63)\r\n-//       ..strokeWidth = 4\r\n-//       ..strokeCap = StrokeCap.round;\r\n+  double r = size.shortestSide / 2;\r\n+  double longHandLength = r - (p * scaleFactor);\r\n \r\n-//     for (int i = 0; i < 360; i += 30) {\r\n-//       double x1 = centerX - outerRadius * cos(i * pi / 180);\r\n-//       double y1 = centerX - outerRadius * sin(i * pi / 180);\r\n+  for (var h = 1; h <= 12; h++) {\r\n+    // if (!showAllNumbers && h % 3 != 80) continue;\r\n+    double angle = (h * pi / 6); //+ pi / 2;\r\n+    Offset offset =\r\n+        Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n+    TextSpan span = TextSpan(style: style, text: h.toString());\r\n+    TextPainter tp = TextPainter(\r\n+      text: span,\r\n+      // textAlign: TextAlign.center,\r\n+      textDirection: TextDirection.rtl,\r\n+    );\r\n+    tp.layout();\r\n \r\n-//       double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n-//       double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n-\r\n-//       canvas.drawLine(Offset(x1, y1), Offset(x2, y2), hourDashPaint);\r\n-//     }\r\n-// //second hand paint\r\n-//     var secHandBrush = Paint()\r\n-//       ..color = Color(0xFFE81466)\r\n-//       ..strokeWidth = 3\r\n-//       ..strokeCap = StrokeCap.round\r\n-//       ..style = PaintingStyle.stroke;\r\n-//     //60 sec-360,1 sec =6 degree\r\n-//     var secHandX = centerX + 80 * cos(dateTime.second * 6 * pi / 180);\r\n-//     var secHandY = centerX + 80 * sin(dateTime.second * 6 * pi / 180);\r\n-\r\n-//     canvas.drawLine(center, Offset(secHandX, secHandY), secHandBrush);\r\n-\r\n-// //minute hand paint\r\n-//     var minHandBrush = Paint()\r\n-//       ..color = Color(0xFFBEC5D5)\r\n-//       ..strokeWidth = 4\r\n-//       ..strokeCap = StrokeCap.round\r\n-//       ..style = PaintingStyle.stroke;\r\n-//     var minHandX = centerX + 80 * cos(dateTime.minute * 6 * pi / 180);\r\n-//     var minHandY = centerX + 80 * sin(dateTime.minute * 6 * pi / 180);\r\n-//     canvas.drawLine(center, Offset(minHandX, minHandY), minHandBrush);\r\n-\r\n-// //hour hand\r\n-//     var hourHandBrush = Paint()\r\n-//       ..color = Color(0xFF222E63)\r\n-//       ..strokeWidth = 6\r\n-//       ..strokeCap = StrokeCap.round\r\n-//       ..style = PaintingStyle.stroke;\r\n-//     var hourHandX = centerX +\r\n-//         60 * cos((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n-//     var hourHandY = centerX +\r\n-//         60 * sin((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n-//     canvas.drawLine(center, Offset(hourHandX, hourHandY), hourHandBrush);\r\n-\r\n-//     Paint centerCirclePaint = Paint()..color = Color(0xFFE81466);\r\n-\r\n-//     canvas.drawCircle(center, 6, centerCirclePaint);\r\n-//   }\r\n-\r\n-//   @override\r\n-//   bool shouldRepaint(covariant CustomPainter oldDelegate) {\r\n-//     return true;\r\n-//   }\r\n-// }\r\n-\r\n-// void _drawIndicators(\r\n-//     Canvas canvas, Size size, double scaleFactor, bool showAllNumbers) {\r\n-//   TextStyle style = TextStyle(\r\n-//       color: Colors.black,\r\n-//       fontWeight: FontWeight.bold,\r\n-//       fontSize: 16.0 * scaleFactor * 1.0);\r\n-//   double p = 8.0;\r\n-//   // p += 24.0;\r\n-\r\n-//   double r = size.shortestSide / 2;\r\n-//   double longHandLength = r - (p * scaleFactor);\r\n-\r\n-//   for (var h = 1; h <= 12; h++) {\r\n-//     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-//     double angle = (h * pi / 6); //+ pi / 2;\r\n-//     Offset offset =\r\n-//         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n-//     TextSpan span = TextSpan(style: style, text: h.toString());\r\n-//     TextPainter tp = TextPainter(\r\n-//       text: span,\r\n-//       // textAlign: TextAlign.center,\r\n-//       textDirection: TextDirection.rtl,\r\n-//     );\r\n-//     tp.layout();\r\n-\r\n-//     tp.paint(canvas, size.center(offset - tp.size.center(Offset.zero)));\r\n-//   }\r\n-// }\r\n+    tp.paint(canvas, size.center(offset - tp.size.center(Offset.zero)));\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1643112449132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6); //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112455118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 2; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112466358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 2; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + 2 * pi; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112474069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + 2 * pi; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + 2; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112481135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + 2; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + 4; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112491682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + 4; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + 8; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112500332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + 8; //+ pi / 2;\r\n+    double angle = (h * pi / 6) * pi; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112509891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) * pi; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112516927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi4; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112532292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi4; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 5; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112539180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 5; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 7; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112546655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 7; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 10; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112556741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 10; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 30; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112565883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 30; //+ pi / 2;\r\n+    double angle = (h * pi / 6) + pi / 45; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112579458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) + pi / 45; //+ pi / 2;\r\n+    double angle = (h * pi / 6) - pi / 60; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112588845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) - pi / 60; //+ pi / 2;\r\n+    double angle = (h * pi / 6) - pi2; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112595572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   double longHandLength = r - (p * scaleFactor);\r\n \r\n   for (var h = 1; h <= 12; h++) {\r\n     // if (!showAllNumbers && h % 3 != 80) continue;\r\n-    double angle = (h * pi / 6) - pi2; //+ pi / 2;\r\n+    double angle = (h * pi / 6) - pi / 2; //+ pi / 2;\r\n     Offset offset =\r\n         Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n     TextSpan span = TextSpan(style: style, text: h.toString());\r\n     TextPainter tp = TextPainter(\r\n"
                },
                {
                    "date": 1643112606830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   TextStyle style = TextStyle(\r\n       color: Colors.black,\r\n       fontWeight: FontWeight.bold,\r\n       fontSize: 16.0 * scaleFactor * 1.0);\r\n-  double p = 8.0;\r\n+  double p = 9.0;\r\n   // p += 24.0;\r\n \r\n   double r = size.shortestSide / 2;\r\n   double longHandLength = r - (p * scaleFactor);\r\n"
                }
            ],
            "date": 1643111608597,
            "name": "Commit-0",
            "content": "// ignore_for_file: prefer_const_constructors\r\n\r\nimport 'dart:math';\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nclass ClockPainter extends CustomPainter {\r\n  @override\r\n  void paint(Canvas canvas, Size size) {\r\n    const double BASE_SIZE = 320.0;\r\n    bool showAllNumbers = true;\r\n    double scaleFactor = size.shortestSide / BASE_SIZE;\r\n    double centerX = size.width / 2;\r\n    double centerY = size.height / 2;\r\n    double radius = min(centerX, centerY);\r\n    Offset center = Offset(centerX, centerY);\r\n    double outerRadius = radius - 20;\r\n    double innerRdaius = radius - 30;\r\n    DateTime dateTime = DateTime.now();\r\n    _drawIndicators(canvas, size, scaleFactor, showAllNumbers);\r\n\r\n    //dashLine for second\r\n    Paint secDashPaint = Paint()\r\n      ..color = Colors.white\r\n      ..strokeWidth = 3\r\n      ..strokeCap = StrokeCap.round;\r\n\r\n    for (int i = 0; i < 360; i += 6) {\r\n      double x1 = centerX - outerRadius * .95 * cos(i * pi / 180);\r\n      double y1 = centerX - outerRadius * .95 * sin(i * pi / 180);\r\n\r\n      double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n      double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n\r\n      canvas.drawLine(Offset(x1, y1), Offset(x2, y2), secDashPaint);\r\n    }\r\n    //dashLine for hour\r\n    Paint hourDashPaint = Paint()\r\n      ..color = Color(0xFF222E63)\r\n      ..strokeWidth = 4\r\n      ..strokeCap = StrokeCap.round;\r\n\r\n    for (int i = 0; i < 360; i += 30) {\r\n      double x1 = centerX - outerRadius * cos(i * pi / 180);\r\n      double y1 = centerX - outerRadius * sin(i * pi / 180);\r\n\r\n      double x2 = centerX - innerRdaius * cos(i * pi / 180);\r\n      double y2 = centerX - innerRdaius * sin(i * pi / 180);\r\n\r\n      canvas.drawLine(Offset(x1, y1), Offset(x2, y2), hourDashPaint);\r\n    }\r\n//second hand paint\r\n    var secHandBrush = Paint()\r\n      ..color = Color(0xFFE81466)\r\n      ..strokeWidth = 3\r\n      ..strokeCap = StrokeCap.round\r\n      ..style = PaintingStyle.stroke;\r\n    //60 sec-360,1 sec =6 degree\r\n    var secHandX = centerX + 80 * cos(dateTime.second * 6 * pi / 180);\r\n    var secHandY = centerX + 80 * sin(dateTime.second * 6 * pi / 180);\r\n\r\n    canvas.drawLine(center, Offset(secHandX, secHandY), secHandBrush);\r\n\r\n//minute hand paint\r\n    var minHandBrush = Paint()\r\n      ..color = Color(0xFFBEC5D5)\r\n      ..strokeWidth = 4\r\n      ..strokeCap = StrokeCap.round\r\n      ..style = PaintingStyle.stroke;\r\n    var minHandX = centerX + 80 * cos(dateTime.minute * 6 * pi / 180);\r\n    var minHandY = centerX + 80 * sin(dateTime.minute * 6 * pi / 180);\r\n    canvas.drawLine(center, Offset(minHandX, minHandY), minHandBrush);\r\n\r\n//hour hand\r\n    var hourHandBrush = Paint()\r\n      ..color = Color(0xFF222E63)\r\n      ..strokeWidth = 6\r\n      ..strokeCap = StrokeCap.round\r\n      ..style = PaintingStyle.stroke;\r\n    var hourHandX = centerX +\r\n        60 * cos((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n    var hourHandY = centerX +\r\n        60 * sin((dateTime.hour * 30 + dateTime.minute * 0.5) * pi / 180);\r\n    canvas.drawLine(center, Offset(hourHandX, hourHandY), hourHandBrush);\r\n\r\n    Paint centerCirclePaint = Paint()..color = Color(0xFFE81466);\r\n\r\n    canvas.drawCircle(center, 6, centerCirclePaint);\r\n  }\r\n\r\n  @override\r\n  bool shouldRepaint(covariant CustomPainter oldDelegate) {\r\n    return true;\r\n  }\r\n}\r\n\r\nvoid _drawIndicators(\r\n    Canvas canvas, Size size, double scaleFactor, bool showAllNumbers) {\r\n  TextStyle style = TextStyle(\r\n      color: Colors.black,\r\n      fontWeight: FontWeight.bold,\r\n      fontSize: 16.0 * scaleFactor * 1.0);\r\n  double p = 8.0;\r\n  // p += 24.0;\r\n\r\n  double r = size.shortestSide / 2;\r\n  double longHandLength = r - (p * scaleFactor);\r\n\r\n  for (var h = 1; h <= 12; h++) {\r\n    // if (!showAllNumbers && h % 3 != 80) continue;\r\n    double angle = (h * pi / 6); //+ pi / 2;\r\n    Offset offset =\r\n        Offset(longHandLength * cos(angle), longHandLength * sin(angle));\r\n    TextSpan span = TextSpan(style: style, text: h.toString());\r\n    TextPainter tp = TextPainter(\r\n      text: span,\r\n      // textAlign: TextAlign.center,\r\n      textDirection: TextDirection.rtl,\r\n    );\r\n    tp.layout();\r\n\r\n    tp.paint(canvas, size.center(offset - tp.size.center(Offset.zero)));\r\n  }\r\n}\r\n"
        }
    ]
}